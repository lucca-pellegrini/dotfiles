#!/bin/sh
#
# Create a note
#

: "${EDITOR:=vim}"
m() { ${DMENU:-dmenu} "$@"; }

find_notes() {
	list="$HOME/.cache/notes.list"
	find . -type f >"$list"
	while read -r file; do
		[ -n "$notes" ] && notes="$notes\n${file#./}" || notes="${file#./}"
	done <"$list"
	rm "$list"
	[ ! "$notes" ] && exit
}

add_note() {
	title=$(m -p "Title" <&- && echo)
	[ ! "$title" ] && exit
	$TERMINAL -e sh -c "$EDITOR $title"
}

remove_note() {
	find_notes
	title=$(printf "%b" "$notes" | m -p "Remove")
	[ ! "$title" ] && exit
	rm "$title"
}

edit_note() {
	find_notes
	title=$(printf "%b" "$notes" | m -p "Edit")
	[ ! "$title" ] && exit
	$TERMINAL -e sh -c "$EDITOR $title"
}

add_task() {
	task=$(m -p "Enter new task" <&- && echo)
	[ ! "$task" ] && exit
	echo "$task" >>"$tasks_list"
}

remove_task() {
	sed -i "/$task/ d" "$tasks_list"
}

edit_task() {
	$TERMINAL -e sh -c "$EDITOR $tasks_list"
}

tasks() {
	tasks_list="$HOME/.local/share/tasks.list"
	content=$(cat "$tasks_list")
	if [ "$content" ]; then
		options="add\nremove\nedit\n"
		task=$(printf "%b" "$content" | m)
		[ ! "$task" ] && exit
	else
		options="add\nedit\n"
	fi
	choice=$(printf "%b" "$options" | m -p "Task")
	case $choice in
	add) add_task ;;
	remove) remove_task ;;
	edit) edit_task ;;
	esac
}

dir="$HOME/.local/share/note/"
current_dir="$PWD"
mkdir -p "$dir"
cd "$dir" || exit
options="add\nremove\nedit\ntasks\n"
choice=$(printf "%b" "$options" | m -p "Note")
case $choice in
add) add_note ;;
remove) remove_note ;;
edit) edit_note ;;
tasks) tasks ;;
esac

cd "$current_dir" || exit
