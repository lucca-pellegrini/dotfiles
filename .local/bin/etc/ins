#!/bin/sh
#
# pacman/makepkg/git wrapper for the aur
#
# deps
# - sudo
# - makepkg
# - an arch-based distro
# - git
#
# I actually use variable "word splitting" to my advantage
#	shellcheck disable=SC2086

[ -z "$1" ] && printf "\033[31merror:\033[0m no packages specified.\n" && exit

# location for this script to download the aur repos
location="$HOME/.cache/aur"

# make $location if it doesn't already exist
mkdir -p "$location"

official() {
	printf "\033[34m%s\033[0m found in official repos; installing normally.\n" "$officialhr"
	sudo pacman $flags -S "$@"
}

aur() {
	# if the package has already been cloned, rename the existing
	# directory and clone again.
	[ -e "$location/$i" ] && mv "$location/$i" "$location/$i-$(date "+%Y-%m-%d_%H-%M")"
	git clone "https://aur.archlinux.org/$i" "$location/$i"
	cd "$location/$i" && makepkg -si
}

add() {
	case $1 in
	aur)
		[ -n "$aurhr" ] && aurhr="$aurhr, $2" || aurhr="$2"
		aur="$aur $2"
		;;

	official)
		[ -n "$officialhr" ] && officialhr="$officialhr, $2" || officialhr="$2"
		official="$official $2"
		;;
	not_found)
		[ -n "$not_foundhr" ] && not_foundhr="$not_foundhr, $2" || not_foundhr="$2"
		;;
	esac
}

while [ "$1" ]; do
	# check if the package exists in the official repos
	case $1 in
	-*)
		[ "$1" = "--needed" ] && needed=0
		[ "$flags" ] && flags="$flags $1" || flags="$1"
		;;
	*)
		if pacman -Si "$1" >/dev/null 2>&1; then
			add official "$1"
		# check if the package exists in the aur
		elif git ls-remote "https://aur.archlinux.org/$1.git" >/dev/null 2>&1; then
			add aur "$1"
		else
			add not_found "$1"
		fi
		;;
	esac
	shift
done

# not found packages
[ "$not_foundhr" ] && printf "\033[31merror:\033[0m package \033[34m%s\033[0m was not found\n" "$not_foundhr"

# install packages from official repositories
[ "$official" ] && official $official

# install packages from AUR
if [ "$aurhr" ]; then
	printf "\033[34m%s\033[0m found in AUR.\n" "$aurhr"
	for i in $aur; do
		if [ "$needed" ]; then
			if pacman -Q "$i" >/dev/null 2>&1; then
				printf "\033[34m%s\033[0m -- skipping\n" "$i"
			else
				aur "$i"
			fi
		else
			aur "$i"
		fi
	done
fi
